# Backup

version: '3'

networks:
  default:
    name: gateway
    external: true
    driver: bridge

volumes:
  grafana:
  prometheus:
  postgres:

services:
  grafana:
    container_name: grafana
    labels:
      traefik.frontend.rule: monitoring.${SERVERNAME}" # Necessary
      # SSL redirect requires a separate router (https://github.com/containous/traefik/issues/4688#issuecomment-477800500)
      traefik.http.routers.grafana.entryPoints: port80
      traefik.http.routers.grafana.rule: host(`monitoring.${SERVERNAME}`)
      traefik.http.middlewares.grafana-redirect.redirectScheme.scheme: https
      traefik.http.middlewares.grafana-redirect.redirectScheme.permanent: true
      traefik.http.routers.grafana.middlewares: grafana-redirect
      # SSL endpoint
      traefik.http.routers.grafana-ssl.entryPoints: port443
      traefik.http.routers.grafana-ssl.rule: host(`monitoring.${SERVERNAME}`)
      traefik.http.routers.grafana-ssl.tls: true
      traefik.http.routers.grafana-ssl.tls.certResolver: le-ssl
      traefik.http.routers.grafana-ssl.service: grafana-ssl
      traefik.http.services.grafana-ssl.loadBalancer.server.port: 3000
    image: grafana/grafana:latest
    user: '0'
    restart: unless-stopped
    volumes:
      - grafana:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./config/grafana/coti.svg:/usr/share/grafana/public/img/grafana_icon.svg:rw
      - ./config/grafana/favicon.png:/usr/share/grafana/public/img/fav32.png
    environment:
      # Note: may need to rm (refresh) the grafana volume when changing these
      GF_SERVER_DOMAIN: monitoring.${SERVERNAME}
      GF_SERVER_ROOT_URL: https://monitoring.${SERVERNAME}
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USERNAME}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
      GF_USERS_ALLOW_SIGN_UP: false
      GF_INSTALL_PLUGINS: yesoreyeram-infinity-datasource
      # DB Config
      GF_DATABASE_TYPE: postgres
      GF_DATABASE_HOST: postgres:5432
      GF_DATABASE_NAME: grafana
      GF_DATABASE_USER: postgres
      GF_DATABASE_PASSWORD: internal_password
      GF_DATABASE_SSL_MODE: disable
      # Anon access: https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-authentication/grafana/
      GF_AUTH_ANONYMOUS_ENABLED: true
      # GF_AUTH_ANONYMOUS_ORG_NAME: Visitor 
      GF_AUTH_ANONYMOUS_ORG_ROLE: Viewer
      GF_AUTH_ANONYMOUS_HIDE_VERSION: true
      GF_AUTH_DISABLE_LOGIN_FORM: false
      # Email Alert Configs
      GF_SMTP_ENABLED: true
      GF_SMTP_HOST: smtp.gmail.com:587
      GF_SMTP_USER: ${GRAFANA_EMAIL_ALERT_TO_ADDRESS}
      GF_SMTP_PASSWORD: ${GRAFANA_EMAIL_ALERT_PASSWORD}
      GF_SMTP_SKIP_VERIFY: true
      GF_SMTP_FROM_ADDRESS: grafana.monitoringalert@gmail.com
      GF_SMTP_FROM_NAME: Grafana
      #
      GF_FEATURE_TOGGLES_ENABLE: publicDashboards
      GF_SECURITY_ALLOW_EMBEDDING: true
    depends_on:
      - prometheus
      - postgres
    networks:
      - default
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  loki:
    container_name: loki
    image: grafana/loki:2.7.4
    volumes:
      - ./config/loki:/etc/loki
    restart: unless-stopped
    command: -config.file=/etc/loki/config.yaml
    logging:
      options:
        max-size: "10m"
        # max-file: "3"

  promtail:
    container_name: promtail
    image: grafana/promtail:2.7.3
    volumes:
      - /var/log:/var/log
      - ./config/promtail:/etc/promtail
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki
    logging:
      options:
        max-size: "10m"
        # max-file: "3"

  nodeexporter:
    image: prom/node-exporter:v0.18.1
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    logging:
      options:
        max-size: "50m"
        max-file: "3"

  prometheus:
    image: prom/prometheus:v2.41.0
    container_name: prometheus
    volumes:
      - ./config/prometheus:/etc/prometheus
      #- prometheus:/prometheus
      # Causes the error "opening storage failed: lock DB directory: resource temporarily unavailable"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - default
    logging:
      options:
        max-size: "10m"
        max-file: "3"
        

  # DB for Grafana
  postgres:
    container_name: postgres
    image: postgres:15.1
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: grafana
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: internal_password
    logging:
      options:
        max-size: "10m"
        max-file: "3"
